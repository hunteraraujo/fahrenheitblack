from abc import ABC, abstractmethod
from pandas import DataFrame

class StrategyInterface(ABC):
    """
    An abstract base class defining the interface for trading strategies.
    
    This class serves as a template for creating various trading strategies. 
    Each strategy should implement the 'analyze' method to generate trading signals 
    based on market data analysis.

    Attributes:
        signals (list): A list of trading signals generated by the strategy.
    """

    def __init__(self):
        """
        Initializes the StrategyInterface class.
        
        Sets up an empty list for storing trading signals.
        """
        self.signals = []

    @abstractmethod
    def analyze(self, data: DataFrame):
        """
        Analyzes the given market data and generates trading signals.
        
        This method must be implemented by any subclass to define a specific trading strategy.
        
        Parameters:
            data (DataFrame): The most recent market data to analyze.
        
        The implementation should populate self.signals with instances of trading signals.
        """
        pass